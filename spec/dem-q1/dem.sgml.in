<!DOCTYPE ARTICLE PUBLIC "-//OASIS//DTD DocBook V4.2//EN" [
<!ENTITY lowbar "_">
<!ENTITY lsqb "[">
<!ENTITY rsqb "]">
<!ENTITY num "#">
<!ENTITY bsol "\">
]>
<ARTICLE>
<ARTICLEINFO>
<TITLE>@TITLE@</TITLE>
<AUTHOR>
<FIRSTNAME>@MYFIRSTNAME@</FIRSTNAME>
<SURNAME>@MYSURNAME@</SURNAME>
<AFFILIATION>
<ADDRESS><EMAIL>@MYEMAIL@</EMAIL></ADDRESS>
</AFFILIATION>
</AUTHOR>
<PUBDATE>v@VERSION@, @DATE@</PUBDATE>
<ABSTRACT>
<PARA>This document describes the DEM file format. This file format is the result of
``recording'' a game in Quake.
This documentation covers the Quake versions 0.91 through 1.09.</PARA>
</ABSTRACT>
</ARTICLEINFO>
<SECT1>
<TITLE>Introduction</TITLE>
<SECT2>
<TITLE>Recording and Playback</TITLE>
<PARA>Recording a game in Quake is as easy as playing it: you need some console
commands to do it well. </PARA>
<PARA>To create a single player DEM file start the game as usual and use the console
command <EMPHASIS>record name level &lsqb;cdtrack]</EMPHASIS>. This starts <LITERAL REMAP="tt">level</LITERAL> with
the currently selected skill and writes a record in <LITERAL REMAP="tt">name.dem</LITERAL>.
The recording will be written during all the play and this record file may 
grow unpredictable. Make sure that you have some MBytes free disk space.
To stop this recording use <EMPHASIS>stop</EMPHASIS> or even quit the whole game 
(<EMPHASIS>quit</EMPHASIS>). To play it back, use the commands <EMPHASIS>playdemo name</EMPHASIS>
or <EMPHASIS>timedemo name</EMPHASIS>. </PARA>
<PARA>To create a multi player DEM file start a ``listen'' server 
(recording from a dedicated server doesn't work) and use again the 
<EMPHASIS>record</EMPHASIS> command. This starts the selected level and the player at the
server is alone in this level. Now all the other clients can connect to the 
server as usual and play what they like (deathmatch or team). The recording 
lasts until the player at the listen server uses the <EMPHASIS>disconnect</EMPHASIS>, 
<EMPHASIS>stop</EMPHASIS> or <EMPHASIS>quit</EMPHASIS> command. The recording is from the point of
view of the player at the listen server (client 1). The playback 
works as in the single player case.</PARA>
</SECT2>
<SECT2>
<TITLE>Versions</TITLE>
<PARA>In this document I'll discuss the DEM format used by the various versions
of Quake.</PARA>
<PARA>

<TABLE>
<TITLE>Covered Quake versions</TITLE>
<TGROUP COLS="4">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY><LITERAL REMAP="tt">Exe:</LITERAL></ENTRY>
<ENTRY>version</ENTRY>
<ENTRY>platform</ENTRY>
<ENTRY>note</ENTRY>
</ROW>
<ROW>
<ENTRY>?</ENTRY>
<ENTRY>0.91</ENTRY>
<ENTRY>MS-DOS, SVGA, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>?</ENTRY>
<ENTRY>0.92</ENTRY>
<ENTRY>MS-DOS, SVGA, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>?</ENTRY>
<ENTRY>0.92</ENTRY>
<ENTRY>Linux, X11, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>?</ENTRY>
<ENTRY>1.00</ENTRY>
<ENTRY>MS-DOS, SVGA, 8bpp</ENTRY>
<ENTRY>Shareware version</ENTRY>
</ROW>
<ROW>
<ENTRY>17:38:28 Jul 12 1996</ENTRY>
<ENTRY>1.01</ENTRY>
<ENTRY>MS-DOS, SVGA, 8bpp</ENTRY>
<ENTRY>CD retail version</ENTRY>
</ROW>
<ROW>
<ENTRY>22:32:43 Aug 4 1996</ENTRY>
<ENTRY>1.01</ENTRY>
<ENTRY>Linux, X11, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>22:32:43 Aug 4 1996</ENTRY>
<ENTRY>1.01</ENTRY>
<ENTRY>Linux, X11, DGA, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>15:21:16 Sep 13 1996</ENTRY>
<ENTRY>1.05beta</ENTRY>
<ENTRY>MS-DOS, SVGA, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>02:59:04 Sep 30 1996</ENTRY>
<ENTRY>1.06</ENTRY>
<ENTRY>MS-DOS, SVGA, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>16:49:53 Nov 22 1996</ENTRY>
<ENTRY>1.06</ENTRY>
<ENTRY>Linux, X11, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>22:44:36 Jan 17 1997</ENTRY>
<ENTRY>1.01</ENTRY>
<ENTRY>Linux, X11, 16bpp</ENTRY>
<ENTRY>leaked source, patched</ENTRY>
</ROW>
<ROW>
<ENTRY>?</ENTRY>
<ENTRY>1.07</ENTRY>
<ENTRY>MS-DOS, SVGA, 8bpp</ENTRY>
<ENTRY>Mission Pack &num;1</ENTRY>
</ROW>
<ROW>
<ENTRY>?</ENTRY>
<ENTRY>1.07</ENTRY>
<ENTRY>Linux, SVGA, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>18:28:16 Mar 11 1997</ENTRY>
<ENTRY>1.08</ENTRY>
<ENTRY>MS-DOS, SVGA, 8bpp</ENTRY>
<ENTRY>Mission Pack &num;2</ENTRY>
</ROW>
<ROW>
<ENTRY>? Mar 21 1997</ENTRY>
<ENTRY>1.09</ENTRY>
<ENTRY>Win32, DirectX, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>15:28:15 Aug 7 1997</ENTRY>
<ENTRY>1.09</ENTRY>
<ENTRY>Linux, SVGA, 8bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>00:36:23 Oct 14 1997</ENTRY>
<ENTRY>(X11 Quake 1.00) 1.09</ENTRY>
<ENTRY>Linux, X11, 8bpp, 16bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>? Nov 7 1997</ENTRY>
<ENTRY>1.09</ENTRY>
<ENTRY>Win32, Glide</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>14:37:37 Nov 13 1997</ENTRY>
<ENTRY>(Linux GL 0.97) 1.09</ENTRY>
<ENTRY>Linux, SVGA, Glide, 16bpp</ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</PARA>
<PARA>There is a small change in the Quake DEM format from 1.06 to 1.07. It will be
discussed in the section <XREF LINKEND="CLIENTDATA">. A new
message was introduced in 1.07 too (see section <XREF LINKEND="CUTSCENE">. In version 1.08 the <EMPHASIS REMAP="bf">temp&lowbar;entity</EMPHASIS>
message changed a bit (see section <XREF LINKEND="TEMP-ENTITY">). In version 1.09 the CD track reading changed totally
(see section <XREF LINKEND="TRACK">).</PARA>
<PARA>I actually check my documentation with Linux Registered Quake 
1.09 (x/squake) and compare it rarely with MS-DOS Registered Quake 1.06. </PARA>
</SECT2>
</SECT1>
<SECT1>
<TITLE>Basics on the used client/server architecture</TITLE>
<PARA>Unlike DOOM and similar games Quake uses a ``server'' process (or even
computer) which ``does'' all the game play. The ``clients'' (at least one)
send to the server all input events (keys, mouse etc.) and receive
all necessary information to draw the current picture. This prevents Quake
from inconsistencies and the network load increases linear with the clients
and not quadratic.</PARA>
<PARA>The communication between server and clients is an asynchronous one. 
If you don't
press any key, your computer won't send any packets to the server. But you 
receive from time to time (the network is unpredictable) a packet to describe
the state of your client. It is obvious, that these packets must contain some
time stamp information, the positions of all monsters in sight and some
player state information like the current weapon, ammo etc.</PARA>
<PARA> 
And exactly this is the DEM file format: the recording of all packets from the 
server to that client, who recorded the game (the first client). 
I call these packets 
``blocks of messages'' and the
single information (time, position, ammo etc.) ``message''.
In the original QuakeC code are some comments referring to ``commands'' instead
of ``messages'' but I won't change all my documentation after all.</PARA>
<PARA>The (listen) server process does the actual recording (file write access).
Since every client gets all information to write the demo himself it was a
matter of time until someone wrote a client proxy to record demos at the
client side. I know two of them:
<VARIABLELIST>
<VARLISTENTRY>
<TERM>dproxy</TERM>
<LISTITEM>
<PARA>written by Kekoa Proudfoot <ULINK URL="mailto:kekoa@graphics.stanford.edu">kekoa@graphics.stanford.edu</ULINK>.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>FAQ-Proxy</TERM>
<LISTITEM>
<PARA>written by Juha Kujala <ULINK URL="mailto:jmkujala@cc.jyu.fi">jmkujala@cc.jyu.fi</ULINK> and Ilkka Rajala <ULINK URL="mailto:r151925@proffa.cc.tut.fi">r151925@proffa.cc.tut.fi</ULINK>. 
For more information visit FAQ homepage at 
<ULINK URL="http://www.modeemi.cs.tut.fi/quake/"></ULINK>.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT1>
<SECT1>
<TITLE>Some remarks on the used demo format</TITLE>
<SECT2>
<TITLE>Advertising</TITLE>
<PARA>As the clever reader may know I'm the author of LMPC, the LMP/DMO/DEM/QWD
Control Centre. With this tool you may

<ITEMIZEDLIST>
<LISTITEM>
<PARA>``decompile'' an existing DEM file to a simple text file and</PARA>
</LISTITEM>
<LISTITEM>
<PARA>``compile'' such a (modified) text file back to a binary DEM file.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

With LMPC it is very easy to analyse a DEM file but you can change it
as well and so create a DEM file of a Quake game you never played.
The current version of LMPC can be found at my  
<ULINK URL="@HOMEURL@">@HOMENAME@</ULINK>.</PARA>
</SECT2>
<SECT2>
<TITLE>Difference to DOOM</TITLE>
<PARA>The recording of a DOOM game consists only of the player input. All the
rest is random-number dependent but totally deterministic and will be 
recalculated during the playback.</PARA>
<PARA>If you change a single action in a LMP file all the
rest is garbage because all monsters now behave totally different and sooner or
later (sooner) you run into a wall. This can't happen in a DEM file. The full
movement of all objects is stored in it.</PARA>
<PARA>This confronts us with new opportunities but also new problems.</PARA>
</SECT2>
<SECT2>
<TITLE>Opportunities of the DEM format</TITLE>
<PARA>With the <EMPHASIS REMAP="bf">centerprint</EMPHASIS> message it is possible to include some
<EMPHASIS>sub-titles</EMPHASIS> in a recording file to inform the watchers what will
happen next.</PARA>
<PARA>The player coordinates and the camera positions may be different. This makes it
possible to simulate the Duke Nukem 3D feature of stationary cameras.
The client doesn't draw the entity with the ``viewpoint''. This is in general
the player entity itself but this entity can be
changed to anything else with the setview message. 
Another problem is the entity selection of the server,
which sends to the client only the entities in sight (of the client). Therefore
it is impossible to enlarge the distance between the camera and the 
recording player too much. They both have to be on the same side of a wall.</PARA>
<PARA>For people with too much spare-time Quake can replace a full 3D modelling
system for cartoons or the like.</PARA>
<PARA>The demo file can contain console commands, which the client runs during
replay. With this feature it is possible to write a screen shot after
every time stamp in the demo file. This makes it very easy to create a 
MPEG movie out of a DEM file.</PARA>
</SECT2>
<SECT2>
<TITLE>Problems of the DEM format</TITLE>
<PARA>It is trivial to remove the ``godmode ON'' and other cheat messages from a
recording. All the action doesn't change at all. These messages are only 
text print commands and the client behaviour doesn't depend on them.</PARA>
<PARA>Fortunately I found a redundancy in the DEM format, which allows to detect a
``godmode'' cheater: Every damage message contains the
health and armor decrease value. The next status line description (it contains
the health and armor values to be displayed) can so be checked.  </PARA>
</SECT2>
</SECT1>
<SECT1>
<TITLE>Some general remarks on the recording structure</TITLE>
<SECT2>
<TITLE>Entity</TITLE>
<PARA>An entity is an object. This may be the whole level (described by a BSP file),
the player (described by a MDL file), an explosion (described by a SPR file) or
the like.</PARA>
<PARA>There are different kind of entities.</PARA>
<SECT3>
<TITLE>Static Entity</TITLE>
<PARA>A static entity doesn't interact with the rest of the game. These are flames
(<LITERAL REMAP="tt">progs/flame.mdl</LITERAL>) and the like. It will be
created by the spawnstatic message. 
It will never be necessary to reference such an entity. They don't get an
entity number. The maximum number of static entities is 127.</PARA>
</SECT3>
<SECT3>
<TITLE>Dynamic Entity</TITLE>
<PARA>A dynamic entity is anything which changes its behaviour or its appearance.
These are ammunition boxes, spinning armours, player models and the like.
A dynamic entity will be created by the spawnbaseline
message. The maximum number of dynamic entities is 449.</PARA>
</SECT3>
<SECT3>
<TITLE>Temporary Entity</TITLE>
<PARA>A temporary entity will be created by the temp&lowbar;entity
message.
A temporary entity is a (as the name indicates) short time entity.</PARA>
<PARA>Quake uses these entities for hits on the wall (point-like entities) or for the
Thunderbolt flash (line-like entities).</PARA>
<PARA>For more information on temporary entities look in section 
<XREF LINKEND="TEMP-ENTITY">.</PARA>
</SECT3>
</SECT2>
<SECT2>
<TITLE>Life-cycles</TITLE>
<PARA>The Quake objects pass different life phases. The following information is not
DEM specific but it may be of general interest to understand the 
cooperation of all the messages.</PARA>
<SECT3>
<TITLE>Armor</TITLE>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>To enable the client to display an armor the serverinfo message asks 
for the 
``progs/armor.mdl'' model file and the ``items/armor1.wav'' sound file.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>The armor starts its life with a spawnbaseline message during the
initialise phase. The armor is now a dynamic entity and spins around. </PARA>
</LISTITEM>
<LISTITEM>
<PARA>The corresponding updateentity message appears only, if the camera is 
near enough to see the armor.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>The player gets it in the play. This results in the sound message
``items/armor1.wav''
and a print message ``you got armor'' and the stufftext message 
``bf&bsol;n'' to make a short flash. </PARA>
</LISTITEM>
<LISTITEM>
<PARA>The updateentity message for the armor
doesn't appear ever again: the player got it.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>From this moment the 
corresponding bit in the <LITERAL REMAP="tt">items</LITERAL> variable in the clientdata message
will be 1 and the <LITERAL REMAP="tt">armorvalue</LITERAL> variable get its maximum (100/150/200).
From the <LITERAL REMAP="tt">items</LITERAL> bit follows the colour of the picture to be drawn in 
the lower left corner of the status line.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Now the player may be hit by a grenade. The total damage value
(damage=take+save) will be 
split in take (<LITERAL REMAP="tt">health-=take</LITERAL>) and save (<LITERAL REMAP="tt">armorvalue-=save</LITERAL>). 
The save amount depends on the armor type (none/green/yellow/red):
<LITERAL REMAP="tt">save=0.0/0.3/0.6/0.8*damage</LITERAL>. 
The damage message in the DEM file tells the 
reduction of the current armor. With the old clientdata value and the 
reduction it is easy to recompute the new clientdata <LITERAL REMAP="tt">armor</LITERAL> value.
Any difference betrays the cheating player. </PARA>
</LISTITEM>
<LISTITEM>
<PARA>After some severe hits the 
<LITERAL REMAP="tt">armorvalue</LITERAL> variable is 0 and the <LITERAL REMAP="tt">items</LITERAL> bit falls back to 0 as
well. There is no armor anymore.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</SECT3>
<SECT3>
<TITLE>(Multi) Player</TITLE>
<PARA>The following describes the deathmatch DEM messages of the two players Alice
and Bob. Alice records the game from her <LITERAL REMAP="tt">-listen 3</LITERAL> server. </PARA>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>The serverinfo message contains the ``maxclients 3'' command to show
how many clients are (at most) in this recording.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>During the 1st initialisation phase there are 3 spawnbaseline messages to 
create the player models. In the 2nd initialisation phase player 0 gets its name
(Alice), colour and frag count (0) . The other 2 players get an empty name
string. In the 3rd phase Alice gets again her name and colour. 
All these phases are controlled by signonnum messages.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>The game starts. Alice (entity 1) is alone in the game and looks around.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Bob connects to Alice's server and it appears entity 2 (Bob's player
model) a transport end temporary entity and a print message 
(``Bob entered the game'') to inform everyone. Then the player 1 (Bob) gets his
updatename and updatecolors message. </PARA>
</LISTITEM>
<LISTITEM>
<PARA>Alice doesn't hesitate and runs for him and shoots him with the Shotgun. 
During every shot the clientdata message reduces the ammo count,
the angles&lsqb;0&rsqb; command shows the wobble of Alice's screen and 
the weaponframe
command selects the corresponding weapon frames. There is a sound message
to start the <LITERAL REMAP="tt">weapons/guncock.wav</LITERAL> file. Entity 1 gets
its attack&lowbar;state command. Alice hits Bob and so appear many particle messages
(blood). 
Every Shotgun shot contains 6 parts. This means the shot can create anything 
from 6 particles (full hit) and 0 temporary entities (type 2: wall hits) to 
0 particles and 6
temporary entities. If there was at least one particle
Bob creates a sound message to start <LITERAL REMAP="tt">player/pain?.wav</LITERAL>.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Alice kills Bob. This creates the sound message to start 
<LITERAL REMAP="tt">player/death1.wav</LITERAL>. Then comes the updatefrags message to give Alice
1 frag and a print message to inform everyone ``Bob chewed on Alice's 
boomstick''. A new entity will be created on the fly with an updateentity
message to display Bob's backpack. </PARA>
</LISTITEM>
<LISTITEM>
<PARA>Bob is dead, his entity 2 model remains in the death frame.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>After some
seconds he starts again by pressing <LITERAL REMAP="tt">SPACE</LITERAL>. He reappears in a 
totally different part of the level. The dead body transforms from entity 2
to entity 4 (maxclients+1) and a temporary entity (transport end) informs
about his return. He is out of sight from the point of Alice's view. This 
means there is no entity 2 updateentity message.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Bob runs to Alice's room. He goes through a slipgate and appears with
4 temporary entities (type 11: transport end) and the entity 2 in her room.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Bob shoots and kills Alice. The scenario is the same as above. Only
the damage messages appear now too, because Alice was hit.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Bob uses the say console command (<EMPHASIS REMAP="it">say this sucks</EMPHASIS>) and in the 
DEM file appears a print message ``&bsol;001Bob: this sucks''. </PARA>
</LISTITEM>
<LISTITEM>
<PARA>Bob disconnects from Alice's server. This results in a print message
``Bob left the game with 1 frags'' and updatename and updatecolor messages
to remove client 2 (or player 1). It is a bit strange but there are 2 
updatefrags messages: player 1 gets first 0 frags (this I understand) and then
again 1 frag (this I don't understand at all).</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Entity 2 represents now the dead player 1.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Alice spins around (it is possible even if you are dead) and the two
dead bodies from Bob are totally white
because they represent player 1 and he got (as he left) the updatecolor message
with the standard colours 0 and 0. She is alone, restarts again her play,
goes to the level end slipgate and get the ranking screen (intermission
message) with only one player
(Alice). Then she stops the recording. The DEM file ends with a disconnect 
message.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</SECT3>
<SECT3>
<TITLE>Medikits, Chthon, etc.</TITLE>
<PARA>May be included later, if someone volunteers. Reading the QuakeC source is
much easier.</PARA>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID="FONT">
<TITLE>Quake font</TITLE>
<PARA>A string may contain any 8 bit characters except `&bsol;377' and it ends with
`&bsol;000'. The special characters `&bsol;n' and `&bsol;r' have their normal
meaning.</PARA>
<PARA>The Quake font is an extended ASCII font (7 bit) which contains in the upper
half a similar font but with a different colour.</PARA>
<PARA>If the first character of a string for the print message is `&bsol;001', the 
Quake client plays the intercom sound <LITERAL REMAP="tt">misc/talk.wav</LITERAL> and 
prints all following characters of the string with the highest bit set.
Bit 7 bit will be set with `&bsol;002' at the first position of the string
as well but this does not play the intercom sound. The special characters 
`&bsol;n' and `&bsol;r' are not affected by the meta characters `&bsol;001' and 
`&bsol;002'.</PARA>
<PARA>I used a simple <ULINK URL="@HOMEURL@/misc/qfont.html">DEM file</ULINK>
to print all 252 ASCII characters.</PARA>
</SECT1>
<SECT1>
<TITLE>File structure</TITLE>
<PARA>To describe the file structure, which is very complicated, I use 
C like program fragments and <LITERAL REMAP="tt">struct</LITERAL> definitions. This 
simplifies my task a lot. </PARA>
<PARA>I invented all used names (messages, variables etc.) for myself, took them 
from the Quake binary, QuakeEd but almost all from the QuakeC source. </PARA>
<SECT2 ID="TRACK">
<TITLE>CD track</TITLE>
<PARA>Beside all the beauty in DEM files, there is a real mess called CD track
at the very beginning of a DEM file.</PARA>
<PARA>All DEM files should start with an ASCII string of the CD track number which 
was given
to the <LITERAL REMAP="tt">record</LITERAL> console command. The string should be terminated by 
`&bsol;n'.</PARA>
<PARA>There are two totally different variants, how Quake reads this first bit in:
the old <LITERAL REMAP="tt">fscanf</LITERAL>-variant and the new step-by-step variant introduced
with version 1.09.</PARA>
<SECT3>
<TITLE><LITERAL REMAP="tt">fscanf</LITERAL></TITLE>
<PARA>Quake reads the CD track bit with something like 

<SCREEN>FILE *fp;
 
int cdtrack;

fscanf(fp,"&percnt;i&bsol;n",&amp;cdtrack);</SCREEN>

This makes it possible (read the fscanf(3) man page!) to terminate the CD 
track string with any (positive) number of any whitespaces (`&nbsp;',
&bsol;t,&bsol;r,&bsol;n). You shouldn't come across anything more
complicated than "4" or "-1" (default CD track of the level).</PARA>
<PARA>Because of the possibility of multiple whitespaces at the end, Quake can't
playback DEM files, where the first byte of the <LITERAL REMAP="tt">blocksize</LITERAL> of 
the first block (see next section) can be interpreted as a whitespace.
Quake wont playback such a file at all! This often happens with recordings
of the levels <LITERAL REMAP="tt">start</LITERAL> and <LITERAL REMAP="tt">hip1m3</LITERAL>.</PARA>
<PARA>The <LITERAL REMAP="tt">fscanf</LITERAL> approach made it possible to create DEM files without
any CD track at all at the beginning. The <LITERAL REMAP="tt">fscanf</LITERAL> call return 0
instead of 1 but who cares? The only thing to take into account is that
the first byte of this DEM file have to be no ASCII number or whitespace
or minus sign. So <LITERAL REMAP="tt">fscanf</LITERAL> can't find the integer number and reads
nothing. The track value is undefined.</PARA>
</SECT3>
<SECT3>
<TITLE>step-by-step</TITLE>
<PARA>Newer Quake versions try to overcome the multiple whitespace problem
of the <LITERAL REMAP="tt">fscanf</LITERAL> variant and read the track ``by hand''.</PARA>
<PARA>The CD track parsing code goes as follows:

<SCREEN>FILE *fp;
int cdtrack=0;
int sign=0; 
unsigned char number;

while((number = ReadByte(fp)) != '\n') {
  if (number == '-') 
    sign=1;
  else
    track = track*10 + number - '0';
}
if (sign)
  track=-track;</SCREEN>

This code is much better but it can't detect files without any CD track header
(like <LITERAL REMAP="tt">finesc5.dem</LITERAL> from the Eschaton movie).
The other thing is that it interprets ``1-&bsol;n'' as -1 but the old 
<LITERAL REMAP="tt">fscanf</LITERAL> variant will be totally confused.</PARA>
</SECT3>
<SECT3>
<TITLE>General hints</TITLE>
<PARA>My LMPC program tries to read any kind of DEM file, so you have the 
possibility to 
change and even remove a CD track. To be most compatibe, use only numbers
and a minus sign at the beginning.</PARA>
<PARA>To find out the method, which your copy of Quake uses for CD track parsing
use the <ULINK URL="@HOMEURL@/misc/cd.html">Quake CD track parsing analyser</ULINK>. This is a multi-variant DEM file, which 
can be parsed by both variants but with different results.</PARA>
<PARA>If you didn't give a CD track number to the <LITERAL REMAP="tt">record</LITERAL> console command 
the CD track string is ``-1&bsol;n''.
This means almost all DEM files start with ``-1&bsol;n''. 
If you gave a CD track but it is not a number at all the string is
``0&bsol;n''.</PARA>
<PARA>All the rest of the DEM file consists of ``blocks'' of ``messages''.</PARA>
</SECT3>
</SECT2>
<SECT2>
<TITLE>Block of Messages</TITLE>
<PARA>At first some QuakeEd-like coordinate <LITERAL REMAP="tt">typedef</LITERAL>'s:

<SCREEN>typedef float vec_t;

typedef vec_t vec3_t[3];</SCREEN>

</PARA>
<PARA>This is the block structure:

<SCREEN>typedef struct {
                 long            blocksize;
                 vec3_t          angles;
                 char            messages[blocksize];
               } block_t;</SCREEN>

A block of messages starts with a size. Then 3 angles follow which describe
the camera viewing direction. All the rest of a block are bytes which 
form one or more messages.</PARA>
<PARA>The messages in a block are the same messages as in the server to client
network protocol. The block header is different and the camera angles are 
missing in the network protocol. For more information on the network protocol
look in The Unofficial Quake Specs at the official Quake-editing support site,
<LITERAL REMAP="tt"><ULINK URL="http://www.gamers.org/dEngine/quake/spec/"></ULINK></LITERAL>.</PARA>
<PARA>Please note the missing camera angles in the network protocol. In an
actual game every Quake client ``knows'' its viewing direction for
itself and gets from the server only the position.</PARA>
</SECT2>
<SECT2>
<TITLE>Message</TITLE>
<PARA>This is the message structure:

<SCREEN>typedef struct {
                 unsigned char ID;
                 char          messagecontent[???];
               } message_t;</SCREEN>

The length of a message depends on its type (or <LITERAL REMAP="tt">ID</LITERAL>).</PARA>
</SECT2>
<SECT2>
<TITLE>Auxiliary routines</TITLE>
<PARA>Here comes the definition of some small auxiliary routines to 
simplify
the main message description. <LITERAL REMAP="tt">get&lowbar;next&lowbar;unsigned&lowbar;char</LITERAL>,
<LITERAL REMAP="tt">get&lowbar;next&lowbar;signed&lowbar;char</LITERAL>, <LITERAL REMAP="tt">get&lowbar;next&lowbar;short</LITERAL> and
<LITERAL REMAP="tt">get&lowbar;next&lowbar;long</LITERAL> are basic functions and they do exactly what they are 
called. Please note: <LITERAL REMAP="tt">byte</LITERAL>, <LITERAL REMAP="tt">char</LITERAL> or <LITERAL REMAP="tt">short</LITERAL> will be 
converted to <LITERAL REMAP="tt">long</LITERAL>.
Second note: all multi-byte structures in the DEM file are Intel ordered.</PARA>
<PARA>In the following I often use a count variable 

<SCREEN>int i;</SCREEN>

without declaration. I hope this does not confuses you. </PARA>
<PARA>

<SCREEN>long ReadByte
{
  return (long) get_next_unsigned_char;
}</SCREEN>

</PARA>
<PARA>

<SCREEN>long ReadChar
{
  return (long) get_next_signed_char;
}</SCREEN>

</PARA>
<PARA>

<SCREEN>long ReadShort
{
  return (long) get_next_short;
}</SCREEN>

</PARA>
<PARA>

<SCREEN>long ReadLong
{
  return get_next_long;
}</SCREEN>

</PARA>
<PARA>Note: A signed angle in a single byte. There are only 256 possible 
direction to look into.</PARA>
<PARA>

<SCREEN>vec_t ReadAngle
{
  return (vec_t) ReadChar / 256.0 * 360.0;
}</SCREEN>

</PARA>
<PARA>

<SCREEN>vec_t ReadCoord
{
  return (vec_t) ReadShort * 0.125;
}</SCREEN>

</PARA>
<PARA>The string reading stops at '&bsol;0' or after 0x7FF bytes. The internal
buffer has only 0x800 bytes available.</PARA>
<PARA>

<SCREEN>char* ReadString
{
  char* string_pointer;
  char string_buffer[0x800];

  string_pointer=string_buffer;
  for (i=0 ; i&lt;0x7FF ; i++, string_pointer++) {
    if (! (*string_pointer = ReadChar) ) break;
  }
  *string_pointer = '\0';
  return strdup(string_buffer);
}</SCREEN>

</PARA>
</SECT2>
</SECT1>
<SECT1>
<TITLE>List of all message types</TITLE>
<PARA>The easiest way to explain a message is to give a short
C like program fragment to parse such a message. It is not really the same code
base as in LMPC but it should be <EMPHASIS>very</EMPHASIS> similar. Each message can be
described by its <LITERAL REMAP="tt">ID</LITERAL> or its name. </PARA>
<SECT2>
<TITLE>bad</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x00</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Something is bad. This message should never appear.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>none</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>nop</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x01</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>No operation.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>none</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>disconnect</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x02</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Disconnect from the server. Stops the game.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>none</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>updatestat</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x03</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Updates directly any values in the player state.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long index;</LITERAL></TERM>
<LISTITEM>
<PARA>is the index in the <LITERAL REMAP="tt">playerstate</LITERAL>
array.

<TABLE>
<TITLE><LITERAL REMAP="tt">updatestat</LITERAL> indices</TITLE>
<TGROUP COLS="2">
<COLSPEC COLSEP="0" ALIGN="RIGHT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>index </ENTRY>
<ENTRY>variable</ENTRY>
</ROW>
<ROW>
<ENTRY>0 </ENTRY>
<ENTRY><LITERAL REMAP="tt">health</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>1 </ENTRY>
<ENTRY>??? (not used)</ENTRY>
</ROW>
<ROW>
<ENTRY>2 </ENTRY>
<ENTRY><LITERAL REMAP="tt">weaponmodel</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>3 </ENTRY>
<ENTRY><LITERAL REMAP="tt">currentammo</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>4 </ENTRY>
<ENTRY><LITERAL REMAP="tt">armorvalue</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>5 </ENTRY>
<ENTRY><LITERAL REMAP="tt">weaponframe</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>6 </ENTRY>
<ENTRY><LITERAL REMAP="tt">ammo&lowbar;shells</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>7 </ENTRY>
<ENTRY><LITERAL REMAP="tt">ammo&lowbar;nails</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>8 </ENTRY>
<ENTRY><LITERAL REMAP="tt">ammo&lowbar;rockets</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>9 </ENTRY>
<ENTRY><LITERAL REMAP="tt">ammo&lowbar;cells</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>10 </ENTRY>
<ENTRY><LITERAL REMAP="tt">weapon</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>11 </ENTRY>
<ENTRY><LITERAL REMAP="tt">total&lowbar;secrets</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>12 </ENTRY>
<ENTRY><LITERAL REMAP="tt">total&lowbar;monsters</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>13 </ENTRY>
<ENTRY><LITERAL REMAP="tt">found&lowbar;secrets</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>14 </ENTRY>
<ENTRY><LITERAL REMAP="tt">killed&lowbar;monsters</LITERAL></ENTRY>
</ROW>
<ROW>
<ENTRY>15 </ENTRY>
<ENTRY>???</ENTRY>
</ROW>
<ROW>
<ENTRY>. </ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>. </ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>. </ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>31 </ENTRY>
<ENTRY>???</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

Normal DEM files use index 11 to 14 only.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long value;</LITERAL></TERM>
<LISTITEM>
<PARA>is the new value.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long playerstate[32];</LITERAL></TERM>
<LISTITEM>
<PARA>is the internal array to describe 
the player state. Many other messages change (indirectly) some values in it. </PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>index = ReadByte;
if (index &gt; 0x1F) {
  error("svc_updatestat: %i is invalid", index);
}
value = ReadLong;
playerstate[index] = value;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>version</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x04</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message defines the version of the server. I never found such a message in
a DEM file. It may be absorbed by the <LITERAL REMAP="tt">serverinfo</LITERAL> message.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long serverprotocol;</LITERAL></TERM>
<LISTITEM>
<PARA>is the version number of the
server. It should be <LITERAL REMAP="tt">0x0F</LITERAL> in Quake.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>serverprotocol = ReadLong;
if (serverprotocol != 0x0F) {
  error("CL_ParseServerMessage: Server is protocol %i instead of %i\n", 
                                                 serverprotocol, 0x0F);
}</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>setview</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x05</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Sets the camera position to the origin of this entity.  </PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long entity;</LITERAL></TERM>
<LISTITEM>
<PARA>is the entity with the camera.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>entity = ReadShort;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>sound</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x06</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message starts the play of a sound at a specific point.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long mask;</LITERAL></TERM>
<LISTITEM>
<PARA>is a bitmask to reduce the amount of data.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">float vol;</LITERAL></TERM>
<LISTITEM>
<PARA>is the volume of the sound (0.0 off, 1.0 max)</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">float attenuation;</LITERAL></TERM>
<LISTITEM>
<PARA>is the attenuation of the sound.

<TABLE>
<TITLE>Sound attenuations</TITLE>
<TGROUP COLS="3">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>value </ENTRY>
<ENTRY>QuakeC </ENTRY>
<ENTRY>purpose</ENTRY>
</ROW>
<ROW>
<ENTRY>0 </ENTRY>
<ENTRY>ATTN&lowbar;NONE </ENTRY>
<ENTRY>i. e. player's death sound doesn't get an attenuation</ENTRY>
</ROW>
<ROW>
<ENTRY>1 </ENTRY>
<ENTRY>ATTN&lowbar;NORM </ENTRY>
<ENTRY>the normal attenuation</ENTRY>
</ROW>
<ROW>
<ENTRY>2 </ENTRY>
<ENTRY>ATTN&lowbar;IDLE </ENTRY>
<ENTRY>for idle monsters</ENTRY>
</ROW>
<ROW>
<ENTRY>3 </ENTRY>
<ENTRY>ATTN&lowbar;STATIC </ENTRY>
<ENTRY>for spawnstaticsound messages</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long channel;</LITERAL></TERM>
<LISTITEM>
<PARA>is the sound channel. There are 8 possible
sound channels for each entity in Quake but the game uses 5 only. 

<TABLE>
<TITLE>Sound channels</TITLE>
<TGROUP COLS="3">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>value </ENTRY>
<ENTRY>QuakeC </ENTRY>
<ENTRY>purpose</ENTRY>
</ROW>
<ROW>
<ENTRY>0 </ENTRY>
<ENTRY>CHAN&lowbar;AUTO </ENTRY>
<ENTRY>selects a channel automatically</ENTRY>
</ROW>
<ROW>
<ENTRY>1 </ENTRY>
<ENTRY>CHAN&lowbar;WEAPON </ENTRY>
<ENTRY>weapon use sounds</ENTRY>
</ROW>
<ROW>
<ENTRY>2 </ENTRY>
<ENTRY>CHAN&lowbar;VOICE </ENTRY>
<ENTRY>pain calls</ENTRY>
</ROW>
<ROW>
<ENTRY>3 </ENTRY>
<ENTRY>CHAN&lowbar;ITEM </ENTRY>
<ENTRY>item get sounds</ENTRY>
</ROW>
<ROW>
<ENTRY>4 </ENTRY>
<ENTRY>CHAN&lowbar;BODY </ENTRY>
<ENTRY>jump and fall sounds</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long entity;</LITERAL></TERM>
<LISTITEM>
<PARA>is the entity which caused the sound.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long soundnum;</LITERAL></TERM>
<LISTITEM>
<PARA>is the sound number in the sound-table.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t origin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the origin of the sound.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>long entity_channel; // combined variable

mask = ReadByte;
vol = mask &amp; 0x01 ? (float) ReadByte / 255.0 : 1.0;
attenuation = mask &amp; 0x02 ? (float) ReadByte / 64.0 : 1.0;
entity_channel = ReadShort;
channel = entity_channel &amp; 0x07;
entity = (entity_channel &gt;&gt; 3) &amp; 0x1FFF;
soundnum = ReadByte;
for (i=0 ; i&lt;3 ; i++) origin[i] = ReadCoord;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>time</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x07</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This is the time stamp of a block of messages. A time message should appear 
in every game block.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">float time;</LITERAL></TERM>
<LISTITEM>
<PARA>is the time in seconds from the beginning of 
the current level (not of the recording).</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>time = ReadFloat;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>print</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x08</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>The client prints the text in the top left corner of the screen. There is space
for 4 lines. They scroll up and the text disappears.
The text will be printed on the console as well. </PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* text;</LITERAL></TERM>
<LISTITEM>
<PARA>is the text to be displayed.
The text contains something like ``You get 5 shells''. </PARA>
<PARA>All font specials are explained in section <XREF LINKEND="FONT">.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>text = ReadString;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>stufftext</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x09</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>The client transfers the text to the console and runs it.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* text;</LITERAL></TERM>
<LISTITEM>
<PARA>is the command, which the client has to 
execute. These are commands like ``bf&bsol;n'' to make a flash after you took
something.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>text = ReadString;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>setangle</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x0A</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message set the camera orientation.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t angles;</LITERAL></TERM>
<LISTITEM>
<PARA>is the new camera orientation.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>for (i=0 ; i&lt;3 ; i++) angles[i] = ReadAngle;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>serverinfo</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x0B</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message is usually the first messages in a DEM file and 
after a level change. It loads model and sound files.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long serverversion;</LITERAL></TERM>
<LISTITEM>
<PARA>is the protocol version of the server.
Quake uses the version value 15 and it is not likely, that this will
change.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long maxclients;</LITERAL></TERM>
<LISTITEM>
<PARA>is the maximum number of clients in this
recording. It is 1 in single player recordings or the number after the
<LITERAL REMAP="tt">-listen</LITERAL> command line parameter.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long multi;</LITERAL></TERM>
<LISTITEM>
<PARA>is 0 in single player recordings and 1 in
multi player recordings. It actually toggles the ranking screen at the end of
a level.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* mapname;</LITERAL></TERM>
<LISTITEM>
<PARA>is the name of the level.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* precache&lowbar;models[MAX&lowbar;MODELS+1];</LITERAL></TERM>
<LISTITEM>
<PARA>is the model-table. 
It will be filled
up with model names. Many other messages contain an index in this array.
The first used index is 1.
<LITERAL REMAP="tt">MAX&lowbar;MODELS</LITERAL> has the value 255.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long nummodels;</LITERAL></TERM>
<LISTITEM>
<PARA>is the number of models in the 
model-table.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* precache&lowbar;sounds[MAX&lowbar;MODELS+1];</LITERAL></TERM>
<LISTITEM>
<PARA>is the sound-table. 
It will be filled
up with sound names. Many other messages contain an index in this array.
The first used index is 1.
<LITERAL REMAP="tt">MAX&lowbar;SOUNDS</LITERAL> has the value 255.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long numsounds;</LITERAL></TERM>
<LISTITEM>
<PARA>is the number of sounds in the 
sound-table.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>serverversion = ReadLong;
if (serverversion != PROTOCOL_VERSION) { 
  error("Server returned version %i, not %i", serverversion, PROTOCOL_VERSION);
}
maxclients = ReadByte;
multi = ReadByte;
mapname = ReadString;
nummodels = 0;
do {
  if (++nummodels &gt; MAX_MODELS) error("Server sent too many model_precache");
  precache_models[nummodels] = ReadString;
} while (*precache_models[nummodels]);
numsounds = 0;
do {
  if (++numsounds &gt; MAX_SOUNDS) error("Server sent too many sound_precache");
  precache_sounds[numsounds] = ReadString;
} while (*precache_sounds[numsounds]);</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>lightstyle</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x0C</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message defines a light style.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long style;</LITERAL></TERM>
<LISTITEM>
<PARA>is the light style number.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* string;</LITERAL></TERM>
<LISTITEM>
<PARA>is a string of letters ``a'' .. ``z'',
where ``a'' means black and ``z'' white.
All effects from nervous flashing: ``az'' to slow dimming: 
``zyxwvu ... edcba'' can so be described.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>style = ReadByte;
string = ReadString;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>updatename</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x0D</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message sets the player name.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">variables</LITERAL></TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long player;</LITERAL></TERM>
<LISTITEM>
<PARA>is the internal player number (client 1
has the player entity 0).</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* netname;</LITERAL></TERM>
<LISTITEM>
<PARA>is the new player name.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>player = ReadByte;
netname = ReadString;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>updatefrags</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x0E</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message updates the frag count of a specific player.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long player;</LITERAL></TERM>
<LISTITEM>
<PARA>is the internal player number (client 1 
has the player entity 0).</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long frags;</LITERAL></TERM>
<LISTITEM>
<PARA>is the new frag count for this player.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>player = ReadByte;
frags = ReadShort;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2 ID="CLIENTDATA">
<TITLE>clientdata</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x0F</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message updates the status line and the camera coordinates.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long mask;</LITERAL></TERM>
<LISTITEM>
<PARA>is a bitmask to show which values are coming.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">float view&lowbar;ofs&lowbar;z;</LITERAL></TERM>
<LISTITEM>
<PARA>is an additional viewing offset because
the camera is at the origin of the entity and not at the eyes 
(is -8 if the player is death). </PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">float punchangle&lowbar;x;</LITERAL></TERM>
<LISTITEM>
<PARA>is an additional offset of the first
angle.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t angles;</LITERAL></TERM>
<LISTITEM>
<PARA>indicates the camera direction change.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t vel;</LITERAL></TERM>
<LISTITEM>
<PARA>indicates the camera velocity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long items;</LITERAL></TERM>
<LISTITEM>
<PARA>contains a bit mask for the inventory.

<TABLE>
<TITLE><LITERAL REMAP="tt">items</LITERAL> bits</TITLE>
<TGROUP COLS="4">
<COLSPEC COLSEP="0" ALIGN="RIGHT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>bit </ENTRY>
<ENTRY>value </ENTRY>
<ENTRY>QuakeC </ENTRY>
<ENTRY>purpose</ENTRY>
</ROW>
<ROW>
<ENTRY>0 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000001</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;SHOTGUN </ENTRY>
<ENTRY>Shotgun (should be always 1)</ENTRY>
</ROW>
<ROW>
<ENTRY>1 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000002</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;SUPER&lowbar;SHOTGUN </ENTRY>
<ENTRY>Double-barrelled Shotgun</ENTRY>
</ROW>
<ROW>
<ENTRY>2 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000004</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;NAILGUN </ENTRY>
<ENTRY>Nailgun</ENTRY>
</ROW>
<ROW>
<ENTRY>3 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000008</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;SUPER&lowbar;NAILGUN </ENTRY>
<ENTRY>Perforator</ENTRY>
</ROW>
<ROW>
<ENTRY>4 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000010</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;GRENADE&lowbar;LAUNCHER </ENTRY>
<ENTRY>Grenade Launcher</ENTRY>
</ROW>
<ROW>
<ENTRY>5 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000020</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;ROCKET&lowbar;LAUNCHER </ENTRY>
<ENTRY>Rocket Launcher</ENTRY>
</ROW>
<ROW>
<ENTRY>6 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000040</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;LIGHTNING </ENTRY>
<ENTRY>Thunderbolt</ENTRY>
</ROW>
<ROW>
<ENTRY>7 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000080</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;EXTRA&lowbar;WEAPON </ENTRY>
<ENTRY>extra weapon (there is no extra weapon)</ENTRY>
</ROW>
<ROW>
<ENTRY>8 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000100</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;SHELLS </ENTRY>
<ENTRY>Shells are active</ENTRY>
</ROW>
<ROW>
<ENTRY>9 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000200</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;NAILS </ENTRY>
<ENTRY>Nails are active</ENTRY>
</ROW>
<ROW>
<ENTRY>10 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000400</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;ROCKETS </ENTRY>
<ENTRY>Grenades are active</ENTRY>
</ROW>
<ROW>
<ENTRY>11 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00000800</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;CELLS </ENTRY>
<ENTRY>Cells are active</ENTRY>
</ROW>
<ROW>
<ENTRY>12 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00001000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;AXE </ENTRY>
<ENTRY>Axe (should be always 1)</ENTRY>
</ROW>
<ROW>
<ENTRY>13 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00002000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;ARMOR1 </ENTRY>
<ENTRY>green Armor</ENTRY>
</ROW>
<ROW>
<ENTRY>14 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00004000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;ARMOR2 </ENTRY>
<ENTRY>yellow Armor</ENTRY>
</ROW>
<ROW>
<ENTRY>15 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00008000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;ARMOR3 </ENTRY>
<ENTRY>red Armor</ENTRY>
</ROW>
<ROW>
<ENTRY>16 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00010000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;SUPERHEALTH </ENTRY>
<ENTRY>Megahealth</ENTRY>
</ROW>
<ROW>
<ENTRY>17 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00020000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;KEY1 </ENTRY>
<ENTRY>silver keycard (or runekey or key)</ENTRY>
</ROW>
<ROW>
<ENTRY>18 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00040000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;KEY2 </ENTRY>
<ENTRY>gold keycard (or runekey or key)</ENTRY>
</ROW>
<ROW>
<ENTRY>19 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00080000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;INVISIBILITY </ENTRY>
<ENTRY>Ring of Shadows</ENTRY>
</ROW>
<ROW>
<ENTRY>20 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00100000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;INVULNERABILITY </ENTRY>
<ENTRY>Pentagram of Protection</ENTRY>
</ROW>
<ROW>
<ENTRY>21 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00200000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;SUIT </ENTRY>
<ENTRY>Biosuit</ENTRY>
</ROW>
<ROW>
<ENTRY>22 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00400000</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;QUAD </ENTRY>
<ENTRY>Quad Damage</ENTRY>
</ROW>
<ROW>
<ENTRY>23 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00800000</LITERAL> </ENTRY>
<ENTRY>unknown </ENTRY>
<ENTRY>unknown (is 0)</ENTRY>
</ROW>
<ROW>
<ENTRY>24 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x01000000</LITERAL> </ENTRY>
<ENTRY>unknown </ENTRY>
<ENTRY>unknown (is 0)</ENTRY>
</ROW>
<ROW>
<ENTRY>25 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x02000000</LITERAL> </ENTRY>
<ENTRY>unknown </ENTRY>
<ENTRY>unknown (is 0)</ENTRY>
</ROW>
<ROW>
<ENTRY>26 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x04000000</LITERAL> </ENTRY>
<ENTRY>unknown </ENTRY>
<ENTRY>unknown (is 0)</ENTRY>
</ROW>
<ROW>
<ENTRY>27 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x08000000</LITERAL> </ENTRY>
<ENTRY>unknown </ENTRY>
<ENTRY>unknown (is 0)</ENTRY>
</ROW>
<ROW>
<ENTRY>28 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x10000000</LITERAL> </ENTRY>
<ENTRY>unknown </ENTRY>
<ENTRY>Rune 1</ENTRY>
</ROW>
<ROW>
<ENTRY>29 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x20000000</LITERAL> </ENTRY>
<ENTRY>unknown </ENTRY>
<ENTRY>Rune 2</ENTRY>
</ROW>
<ROW>
<ENTRY>30 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x40000000</LITERAL> </ENTRY>
<ENTRY>unknown </ENTRY>
<ENTRY>Rune 3</ENTRY>
</ROW>
<ROW>
<ENTRY>31 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x80000000</LITERAL> </ENTRY>
<ENTRY>unknown </ENTRY>
<ENTRY>Rune 4</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

You can find the default value for <LITERAL REMAP="tt">items</LITERAL> in the parse routine: 
<LITERAL REMAP="tt">0x4001</LITERAL>. It looks like a programmer's mistake because this means
Shotgun any yellow Armor. It should be <LITERAL REMAP="tt">0x1001</LITERAL>: Shotgun and Axe.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long weaponframe;</LITERAL></TERM>
<LISTITEM>
<PARA>is the frame of the weapon model.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long armorvalue;</LITERAL></TERM>
<LISTITEM>
<PARA>is the current armor.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long weaponmodel;</LITERAL></TERM>
<LISTITEM>
<PARA>is the model number of the weapon in 
the model-table.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long health;</LITERAL></TERM>
<LISTITEM>
<PARA>is the current health.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long currentammo;</LITERAL></TERM>
<LISTITEM>
<PARA>is the current number of the current 
ammunition.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long ammo&lowbar;shells;</LITERAL></TERM>
<LISTITEM>
<PARA>is the current number of shells.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long ammo&lowbar;nails;</LITERAL></TERM>
<LISTITEM>
<PARA>is the current number of nails.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long ammo&lowbar;rockets;</LITERAL></TERM>
<LISTITEM>
<PARA>is the current number of rockets.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long ammo&lowbar;cells;</LITERAL></TERM>
<LISTITEM>
<PARA>is the current number of cells.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long weapon;</LITERAL></TERM>
<LISTITEM>
<PARA>contains a bit mask for the current weapon.

<TABLE>
<TITLE><LITERAL REMAP="tt">weapon</LITERAL> bits</TITLE>
<TGROUP COLS="4">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>bit </ENTRY>
<ENTRY>value </ENTRY>
<ENTRY>QuakeC </ENTRY>
<ENTRY>weapon</ENTRY>
</ROW>
<ROW>
<ENTRY>? </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x00</LITERAL> </ENTRY>
<ENTRY>not available </ENTRY>
<ENTRY>Axe</ENTRY>
</ROW>
<ROW>
<ENTRY>0 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x01</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;SHOTGUN </ENTRY>
<ENTRY>Shotgun</ENTRY>
</ROW>
<ROW>
<ENTRY>1 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x02</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;SUPER&lowbar;SHOTGUN </ENTRY>
<ENTRY>Double-barrelled Shotgun</ENTRY>
</ROW>
<ROW>
<ENTRY>2 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x04</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;NAILGUN </ENTRY>
<ENTRY>Nailgun</ENTRY>
</ROW>
<ROW>
<ENTRY>3 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x08</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;SUPER&lowbar;NAILGUN</ENTRY>
<ENTRY>Perforator</ENTRY>
</ROW>
<ROW>
<ENTRY>4 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x10</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;GRENADE&lowbar;LAUNCHER</ENTRY>
<ENTRY>Grenade Launcher</ENTRY>
</ROW>
<ROW>
<ENTRY>5 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x20</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;ROCKET&lowbar;LAUNCHER</ENTRY>
<ENTRY>Rocket Launcher</ENTRY>
</ROW>
<ROW>
<ENTRY>6 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x40</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;LIGHTNING</ENTRY>
<ENTRY>Thunderbolt</ENTRY>
</ROW>
<ROW>
<ENTRY>7 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x80</LITERAL> </ENTRY>
<ENTRY>IT&lowbar;EXTRA&lowbar;WEAPON</ENTRY>
<ENTRY>extra weapon (there is no extra weapon)</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">float version;</LITERAL></TERM>
<LISTITEM>
<PARA>is the Quake version. Up to Quake
1.06 the bit <LITERAL REMAP="tt">0x0200</LITERAL> in the <LITERAL REMAP="tt">mask</LITERAL> variable indicated an
used <LITERAL REMAP="tt">items</LITERAL> entry. From 1.07 on the bit will be ignored and the 
<LITERAL REMAP="tt">items</LITERAL> entry is compulsory. An old Quake client (&lt;=1.06) can
not play back the recording of a new Quake (&gt;=1.07) because the unused bit 
is from 1.07 on always 0. The most compatible variant is to set the bit
<LITERAL REMAP="tt">0x0200</LITERAL> and include an items entry. This is the standard behaviour
of LMPC. Even newer version of Quake (only checked with Linux Quake 1.09) 
set always the bit <LITERAL REMAP="tt">0x0200</LITERAL> in the <LITERAL REMAP="tt">mask</LITERAL> variable and 
send always the <LITERAL REMAP="tt">items</LITERAL> entry.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>long uk_bit_b10, uk_bit_b11; // unknown

mask = ReadShort;
view_ofs_z = mask &amp; 0x0001 ? (float) ReadChar : 22.0;
punchangle_x = mask &amp; 0x0002 ? (float) ReadChar : 0.0; 
angles[0] = mask &amp; 0x0004 ? (vec_t) ReadChar : 0.0; 
vel[0] = mask &amp; 0x0020 ? (vec_t) ReadChar : 0.0;
angles[1] = mask &amp; 0x0008 ? (vec_t) ReadChar : 0.0; 
vel[1] = mask &amp; 0x0040 ? (vec_t) ReadChar : 0.0;
angles[2] = mask &amp; 0x0010 ? (vec_t) ReadChar : 0.0; 
vel[2] = mask &amp; 0x0080 ? (vec_t) ReadChar : 0.0;
if (version&lt;=1.06)
  items = mask &amp; 0x0200 ? ReadLong : 0x4001;
else 
  items = ReadLong;
uk_bit_b10 = mask &amp; 0x0400 ? 1 : 0; // bit 10 
uk_bit_b11 = mask &amp; 0x0800 ? 1 : 0; // bit 11 
weaponframe = mask &amp; 0x1000 ? ReadByte : 0;
armorvalue = mask &amp; 0x2000 ? ReadByte : 0;
weaponmodel = mask &amp; 0x4000 ? ReadByte : 0; 
health = ReadShort;  
currentammo = ReadByte;
ammo_shells = ReadByte;
ammo_nails = ReadByte;
ammo_rockets = ReadByte;
ammo_cells = ReadByte;
weapon = ReadByte;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>stopsound</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x10</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Stops a sound. It looks for a sound started with a <EMPHASIS REMAP="bf">sound</EMPHASIS> message
with the same <LITERAL REMAP="tt">channel</LITERAL> and <LITERAL REMAP="tt">entity</LITERAL>.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long channel;</LITERAL></TERM>
<LISTITEM>
<PARA>is the sound channel.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long entity;</LITERAL></TERM>
<LISTITEM>
<PARA>is the entity which caused the sound.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>long entity_channel; // combined variable

entity_channel = ReadShort;
channel = entity_channel &amp; 0x07;
entity = (entity_channel &gt;&gt; 3) &amp; 0x1FFF;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>updatecolors</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x11</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Updates the colours of the specified player.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long player;</LITERAL></TERM>
<LISTITEM>
<PARA>is the internal player number
(client 1 has player entity 0).</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long colors;</LITERAL></TERM>
<LISTITEM>
<PARA>is the combined colour of this player.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long shirtcolor;</LITERAL></TERM>
<LISTITEM>
<PARA>is the colour of the shirt
(0 &lt;= <LITERAL REMAP="tt">shirtcolor</LITERAL> &lt;= 15).</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long pantscolor;</LITERAL></TERM>
<LISTITEM>
<PARA>is the colour of the pants
(0 &lt;= <LITERAL REMAP="tt">pantscolor</LITERAL> &lt;= 15).</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>player = ReadByte;
colors = ReadByte;
shirtcolor = (colors&gt;&gt;4) &amp; 0x0F;
pantscolor = colors &amp; 0x0F;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>particle</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x12</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This starts particles flying around. This happens, if a barrel explodes or
blood particles fly after being hit by an axe, shells or nails.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t origin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the origin of the particles.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t vel;</LITERAL></TERM>
<LISTITEM>
<PARA>is the velocity of the particles.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long color;</LITERAL></TERM>
<LISTITEM>
<PARA>is the colour of the particles (chunk 0,
blood 73, barrel 75 and thunderbolt 225).</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long count;</LITERAL></TERM>
<LISTITEM>
<PARA>is the number of the particles.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>for (i=0 ; i&lt;3 ; i++) origin[i] = ReadCoord;
for (i=0 ; i&lt;3 ; i++) vel[i] = (vec_t) ReadChar * 0.0625;
count = ReadByte;
color = ReadByte;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>damage</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x13</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Tells how severe was a hit and from which point it came.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long save;</LITERAL></TERM>
<LISTITEM>
<PARA>will be subtracted from the current armor.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long take;</LITERAL></TERM>
<LISTITEM>
<PARA>will be subtracted from the current
health.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t origin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the origin of the
hit. It points to the weapon of a monster or player (not the origin of the
monster entity) or it is (0,0,0) if the damage was caused by drowning or
burning.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>save = ReadByte;
take = ReadByte;
for (i=0 ; i&lt;3 ; i++) origin[i] = ReadCoord;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2 ID="SPAWNSTATIC">
<TITLE>spawnstatic</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x14</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message creates a static entity and sets the internal default values.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long StaticEntityCount;</LITERAL></TERM>
<LISTITEM>
<PARA>is the number of already started
static entities. The maximum number is 127.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long default&lowbar;modelindex;</LITERAL></TERM>
<LISTITEM>
<PARA>is the model number in the 
model-table.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long default&lowbar;frame;</LITERAL></TERM>
<LISTITEM>
<PARA>is the frame number of the model.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long default&lowbar;colormap;</LITERAL></TERM>
<LISTITEM>
<PARA>is the colormap number to display 
the model.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long default&lowbar;skin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the skin number of the model. 
This is used for things with different skins (like players or armors). </PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t default&lowbar;origin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the origin of the entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t default&lowbar;angles;</LITERAL></TERM>
<LISTITEM>
<PARA>is the orientation of the entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">&num;define MAX&lowbar;STATIC&lowbar;ENTITIES 127</LITERAL></TERM>
<LISTITEM>
<PARA>is the
maximum number of static entities in a given level.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>int data1, data2, data3;

if (StaticEntityCount &gt; MAX_STATIC_ENTITIES) error("Too many static entities");
StaticEntityCount++;
default_modelindex = ReadByte;
default_frame = ReadByte;
default_colormap = ReadByte;
default_skin = ReadByte;
for (i=0 ; i&lt;3 ; i++) {
  default_origin[i] = ReadCoord;
  default_angles[i] = ReadAngle;
}</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>spawnbinary</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x15</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This is OBSOLETE. It should never occur in DEM files.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>error ("CL_ParseServerMessage: Illegible server message\n");</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2 ID="SPAWNBASELINE">
<TITLE>spawnbaseline</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x16</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message creates a dynamic entity and sets the internal default values.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long entity;</LITERAL></TERM>
<LISTITEM>
<PARA>is the number of the entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long default&lowbar;modelindex;</LITERAL></TERM>
<LISTITEM>
<PARA>is the model number in the 
model-table.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long default&lowbar;frame;</LITERAL></TERM>
<LISTITEM>
<PARA>is the frame number of the model.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long default&lowbar;colormap;</LITERAL></TERM>
<LISTITEM>
<PARA>is the colormap number to display 
the model.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long default&lowbar;skin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the skin number of the model. This is
used for things with different skins (like players or armors).</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t default&lowbar;origin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the origin of the entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t default&lowbar;angles;</LITERAL></TERM>
<LISTITEM>
<PARA>is the orientation of the entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">&num;define MAX&lowbar;ENTITIES 449</LITERAL></TERM>
<LISTITEM>
<PARA>is the maximum number of
entities in a given level.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>entity = ReadShort;
if (entity &gt; MAX_ENTITIES) error("CL_EntityNum: %i is an invalid number", entity);
default_modelindex = ReadByte;
default_frame = ReadByte;
default_colormap = ReadByte;
default_skin = ReadByte;
for (i=0 ; i&lt;3 ; i++) {
  default_origin[i] = ReadCoord;
  default_angles[i] = ReadAngle;
}</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2 ID="TEMP-ENTITY">
<TITLE>temp&lowbar;entity</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x17</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message creates a temporary entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long entitytype;</LITERAL></TERM>
<LISTITEM>
<PARA>is the type of the temporary entity.
There are two kinds of temporary entities in Quake.
<LITERAL REMAP="tt">TE&lowbar;EXPLOSION2</LITERAL> and <LITERAL REMAP="tt">TE&lowbar;BEAM</LITERAL> was introduced
with the Mission Pack &num; 2 (Quake version 1.08).
<VARIABLELIST>
<VARLISTENTRY>
<TERM>point entity</TERM>
<LISTITEM>
<PARA>is a small point like entity.

<TABLE>
<TITLE>point entities</TITLE>
<TGROUP COLS="3">
<COLSPEC COLSEP="0" ALIGN="RIGHT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>value </ENTRY>
<ENTRY>QuakeC </ENTRY>
<ENTRY>purpose </ENTRY>
</ROW>
<ROW>
<ENTRY>0 </ENTRY>
<ENTRY>TE&lowbar;SPIKE </ENTRY>
<ENTRY>unknown</ENTRY>
</ROW>
<ROW>
<ENTRY>1 </ENTRY>
<ENTRY>TE&lowbar;SUPERSPIKE </ENTRY>
<ENTRY>superspike hits (spiketraps)</ENTRY>
</ROW>
<ROW>
<ENTRY>2 </ENTRY>
<ENTRY>TE&lowbar;GUNSHOT </ENTRY>
<ENTRY>hit on the wall (Axe, Shotgun)</ENTRY>
</ROW>
<ROW>
<ENTRY>3 </ENTRY>
<ENTRY>TE&lowbar;EXPLOSION </ENTRY>
<ENTRY>grenade/missile explosion</ENTRY>
</ROW>
<ROW>
<ENTRY>4 </ENTRY>
<ENTRY>TE&lowbar;TAREXPLOSION </ENTRY>
<ENTRY>explosion of atarbaby</ENTRY>
</ROW>
<ROW>
<ENTRY>7 </ENTRY>
<ENTRY>TE&lowbar;WIZSPIKE </ENTRY>
<ENTRY>wizard's hit</ENTRY>
</ROW>
<ROW>
<ENTRY>8 </ENTRY>
<ENTRY>TE&lowbar;KNIGHTSPIKE </ENTRY>
<ENTRY>hell knight's shothit</ENTRY>
</ROW>
<ROW>
<ENTRY>10 </ENTRY>
<ENTRY>TE&lowbar;LAVASPLASH </ENTRY>
<ENTRY>Chthon awakes and fallsdead</ENTRY>
</ROW>
<ROW>
<ENTRY>11 </ENTRY>
<ENTRY>TE&lowbar;TELEPORT </ENTRY>
<ENTRY>teleport end</ENTRY>
</ROW>
<ROW>
<ENTRY>12 </ENTRY>
<ENTRY>TE&lowbar;EXPLOSION2 </ENTRY>
<ENTRY>other explosion</ENTRY>
</ROW>
<ROW>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>large entity</TERM>
<LISTITEM>
<PARA>is a 2 dimensional entity.

<TABLE>
<TITLE>line entities</TITLE>
<TGROUP COLS="3">
<COLSPEC COLSEP="0" ALIGN="RIGHT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>value </ENTRY>
<ENTRY>QuakeC </ENTRY>
<ENTRY>purpose</ENTRY>
</ROW>
<ROW>
<ENTRY>5 </ENTRY>
<ENTRY>TE&lowbar;LIGHTNING1 </ENTRY>
<ENTRY>flash of theShambler</ENTRY>
</ROW>
<ROW>
<ENTRY>6 </ENTRY>
<ENTRY>TE&lowbar;LIGHTNING2 </ENTRY>
<ENTRY>flash of theThunderbolt</ENTRY>
</ROW>
<ROW>
<ENTRY>9 </ENTRY>
<ENTRY>TE&lowbar;LIGHTNING3 </ENTRY>
<ENTRY>flash in e1m7 to killChthon</ENTRY>
</ROW>
<ROW>
<ENTRY>13 </ENTRY>
<ENTRY>TE&lowbar;BEAM </ENTRY>
<ENTRY>grappling hook</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long entity;</LITERAL></TERM>
<LISTITEM>
<PARA>is the entity which created the temporary
entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t origin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the origin of the entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t trace&lowbar;endpos;</LITERAL></TERM>
<LISTITEM>
<PARA>is the destination of the large
temporary entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long color;</LITERAL></TERM>
<LISTITEM>
<PARA>is the colour of the temporary entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long range;</LITERAL></TERM>
<LISTITEM>
<PARA>is the range for a
<LITERAL REMAP="tt">TE&lowbar;EXPLOSION2</LITERAL> explosion.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>entitytype = ReadByte;
switch (entitytype) {
  case TE_SPIKE:
  case TE_SUPERSPIKE:
  case TE_GUNSHOT:
  case TE_EXPLOSION:
  case TE_TAREXPLOSION:
  case TE_WIZSPIKE:
  case TE_KNIGHT_SPIKE:
  case TE_LAVASPLASH:
  case TE_TELEPORT:
         for (i=0 ; i&lt;3 ; i++) origin[i] = ReadCoord;
  break;
  case TE_LIGHTNING1:
  case TE_LIGHTNING2:
  case TE_LIGHTNING3:
  case TE_BEAM:
         entity = ReadShort;
         for (i=0 ; i&lt;3 ; i++) origin[i] = ReadCoord;
         for (i=0 ; i&lt;3 ; i++) trace_endpos[i] = ReadCoord;
  break;
  case TE_EXPLOSION2:
         for (i=0 ; i&lt;3 ; i++) origin[i] = ReadCoord;
         color = ReadByte;
         range = ReadByte;
  break;
  default:
    error("CL_ParseTEnt: bad type");
  break;
}</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>setpause</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x18</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Set the pause state. The time stands still but all entities get their update
messages.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long pausestate;</LITERAL></TERM>
<LISTITEM>
<PARA>is 1 to start the pause and 0 to stop it.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>pausestate = ReadByte;
if (pausestate) {
  // pause is on
}
else {
  // pause is off
}</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>signonum</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x19</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message selects the client state.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM>long signon;</TERM>
<LISTITEM>
<PARA>is the client state. 

<TABLE>
<TITLE><LITERAL REMAP="tt">signon</LITERAL> values</TITLE>
<TGROUP COLS="2">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>value </ENTRY>
<ENTRY>purpose</ENTRY>
</ROW>
<ROW>
<ENTRY>1 </ENTRY>
<ENTRY>after model/sound precache, start spawning entities (``prespawn'')</ENTRY>
</ROW>
<ROW>
<ENTRY>2 </ENTRY>
<ENTRY>start initialising light effects</ENTRY>
</ROW>
<ROW>
<ENTRY>3 </ENTRY>
<ENTRY>start 3D rendering</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>signon = ReadByte;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>centerprint</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x1A</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Prints the specified text at the centre of the screen. There is only one text
line with a maximum of 40 characters. To print more than this one line, use
`&bsol;n' for a new line. Every text line (the first 40 characters) will be 
centred horizontally.</PARA>
<PARA>All font specials are explained in section <XREF LINKEND="FONT">.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* text;</LITERAL></TERM>
<LISTITEM>
<PARA>is the text to be displayed.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>text = ReadString;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>killedmonster</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x1B</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message indicates the death of a monster.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long killed&lowbar;monsters;</LITERAL></TERM>
<LISTITEM>
<PARA>is the number of killed monsters. 
It may be displayed with the console command <EMPHASIS REMAP="it">showscores</EMPHASIS>.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>killed_monsters++;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>foundsecret</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x1C</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message receives a client, if the player enters a secret area.
It comes usually with a <LITERAL REMAP="tt">print</LITERAL> message.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long found&lowbar;secrets;</LITERAL></TERM>
<LISTITEM>
<PARA>is the number of found secrets. It may
be displayed with the console command <EMPHASIS REMAP="it">showscores</EMPHASIS>.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>found_secrets++;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>spawnstaticsound</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x1D</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message starts a static (ambient) sound not connected to an entity but to
a position.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t origin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the origin of 
the sound.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long soundnum;</LITERAL></TERM>
<LISTITEM>
<PARA>is the sound number in the sound-table.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">float vol;</LITERAL></TERM>
<LISTITEM>
<PARA>is the volume (0.0 off, 1.0 max)</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">float attenuation;</LITERAL></TERM>
<LISTITEM>
<PARA>is the attenuation of the sound. 

<TABLE>
<TITLE>Sound attenuation</TITLE>
<TGROUP COLS="3">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>value </ENTRY>
<ENTRY>QuakeC </ENTRY>
<ENTRY>purpose</ENTRY>
</ROW>
<ROW>
<ENTRY>0 </ENTRY>
<ENTRY>ATTN&lowbar;NONE </ENTRY>
<ENTRY>i. e. player's death sound doesn't get an attenuation</ENTRY>
</ROW>
<ROW>
<ENTRY>1 </ENTRY>
<ENTRY>ATTN&lowbar;NORM </ENTRY>
<ENTRY>the normal attenuation</ENTRY>
</ROW>
<ROW>
<ENTRY>2 </ENTRY>
<ENTRY>ATTN&lowbar;IDLE </ENTRY>
<ENTRY>attenuation for idle monsters</ENTRY>
</ROW>
<ROW>
<ENTRY>3 </ENTRY>
<ENTRY>ATTN&lowbar;STATIC </ENTRY>
<ENTRY>attenuation for spawnstaticsound messages</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>for (i=0 ; i&lt;3 ; i++) origin[i] = ReadCoord;
soundnum = ReadByte;
vol = (float) ReadByte / 255.0; 
attenuation = (float) ReadByte / 64.0;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>intermission</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x1E</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Displays the level end screen. Depending on the <LITERAL REMAP="tt">multi</LITERAL> command in
the serverinfo message this is either the single player summary screen or the
multi player ranking screen.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>none</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>finale</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x1F</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Displays the episode end screen and some text.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* text;</LITERAL></TERM>
<LISTITEM>
<PARA>is the episode end text.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>text = ReadString;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>cdtrack</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x20</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message selects the audio CD track numbers.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long fromtrack;</LITERAL></TERM>
<LISTITEM>
<PARA>is the start track.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long totrack;</LITERAL></TERM>
<LISTITEM>
<PARA>is the last track. Both values are
equal at the start of a game but become 2 and 3 at the end of an episode.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>fromtrack = ReadByte;
totrack = ReadByte;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>sellscreen</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x21</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>Displays the help and sell screen.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>none</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2 ID="CUTSCENE">
<TITLE>cutscene</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">0x22</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This message appeared firstly with the Mission Pack &num;1 (Quake version
1.07). It is similar to <EMPHASIS REMAP="bf">finale</EMPHASIS> as it displays an end screen and 
some text.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">char* text;</LITERAL></TERM>
<LISTITEM>
<PARA>is the text.</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>text = ReadString;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
<SECT2>
<TITLE>updateentity</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">ID</LITERAL></TERM>
<LISTITEM>
<PARA><LITERAL REMAP="tt">&gt;=0x80</LITERAL></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>purpose</TERM>
<LISTITEM>
<PARA>This is the general entity update message. For every entity 
(potentially) in sight the server sends such a message. The message contains
only the values, which changed since the creation (or spawning) of the 
entity (with spawnstatic, spawnbaseline).</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>variables</TERM>
<LISTITEM>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long mask;</LITERAL></TERM>
<LISTITEM>
<PARA>is a bit mask to reduce the amount of data to be
sent. Only the changed parts (with respect to the initial state) get their 
bit and their values.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long entity;</LITERAL></TERM>
<LISTITEM>
<PARA>is the entity number. </PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long modelindex;</LITERAL></TERM>
<LISTITEM>
<PARA>is the model number in the model-table. </PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long frame;</LITERAL></TERM>
<LISTITEM>
<PARA>is the frame number of the model.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long colormap;</LITERAL></TERM>
<LISTITEM>
<PARA>is the colormap number to display the model.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long skin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the skin number of the model. This is used 
for things with different skins (like players or armors). </PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long effects;</LITERAL></TERM>
<LISTITEM>
<PARA>contains a bit mask for special entity
effects.

<TABLE>
<TITLE>Possible <LITERAL REMAP="tt">effects</LITERAL> values</TITLE>
<TGROUP COLS="4">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<COLSPEC COLSEP="0" ALIGN="LEFT">
<TBODY>
<ROW>
<ENTRY>bit </ENTRY>
<ENTRY>value </ENTRY>
<ENTRY>QuakeC </ENTRY>
<ENTRY>purpose</ENTRY>
</ROW>
<ROW>
<ENTRY>0 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x01</LITERAL> </ENTRY>
<ENTRY>EF&lowbar;BRIGHTFIELD </ENTRY>
<ENTRY>not used</ENTRY>
</ROW>
<ROW>
<ENTRY>1 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x02</LITERAL> </ENTRY>
<ENTRY>EF&lowbar;MUZZLEFLASH </ENTRY>
<ENTRY>attack state of most entities</ENTRY>
</ROW>
<ROW>
<ENTRY>2 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x04</LITERAL> </ENTRY>
<ENTRY>EF&lowbar;BRIGHTLIGHT </ENTRY>
<ENTRY>not used</ENTRY>
</ROW>
<ROW>
<ENTRY>3 </ENTRY>
<ENTRY><LITERAL REMAP="tt">0x08</LITERAL> </ENTRY>
<ENTRY>EF&lowbar;DIMLIGHT </ENTRY>
<ENTRY>Quad Damage, Pentagram of Protection, Enforcer's laser</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t origin;</LITERAL></TERM>
<LISTITEM>
<PARA>is the origin of the entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">vec3&lowbar;t angles;</LITERAL></TERM>
<LISTITEM>
<PARA>is the orientation of the entity.</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM><LITERAL REMAP="tt">long new;</LITERAL></TERM>
<LISTITEM>
<PARA>is 1 if the entity gets some really new values
(modelindex etc.)</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>parse routine</TERM>
<LISTITEM>
<PARA>

<SCREEN>mask = ID &amp; 0x07F;
if (mask &amp; 0x0001) mask |= (ReadByte) &lt;&lt; 8;
entity = mask &amp; 0x4000 ? ReadShort : ReadByte;
modelindex = mask &amp; 0x0400 ? ReadByte : default_modelindex;
frame = mask &amp; 0x0040 ? ReadByte : default_frame; 
colormap = mask &amp; 0x0800 ? ReadByte : default_colormap; 
skin = mask &amp; 0x1000 ? ReadByte : default_skin;
effects = mask &amp; 0x2000 ? ReadByte : default_effects;
origin[0] = mask &amp; 0x0002 ? ReadCoord : default_origin[0];
angles[0] = mask &amp; 0x0100 ? ReadAngle : default_angles[0];
origin[1] = mask &amp; 0x0004 ? ReadCoord : default_origin[1];
angles[1] = mask &amp; 0x0010 ? ReadAngle : default_angles[1];
origin[2] = mask &amp; 0x0008 ? ReadCoord : default_origin[2];
angles[2] = mask &amp; 0x0200 ? ReadAngle : default_angles[2];
new = mask &amp; 0x0020 ? 1 : 0;</SCREEN>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT2>
</SECT1>
<SECT1>
<TITLE>Version History and Acknowledgements</TITLE>
<PARA><VARIABLELIST>
<VARLISTENTRY>
<TERM>0.0.1, 7 July, 1996</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>First version (working paper) completed.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Many thanks to Steffen Winterfeldt
(<ULINK URL="mailto:Steffen.Winterfeldt@itp.uni-leipzig.de">Steffen.Winterfeldt@itp.uni-leipzig.de</ULINK>)
for his unbelievable reverse engineering work. He worked out all the structure 
information.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>0.0.2, 8 July, 1996</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>Stupid spawnstatic error corrected.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>0.0.3, 9 July, 1996</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>I finally understood the multi player recordings.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>More info on sound, particle, spawnstaticsound.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>0.0.4, 14 July, 1996</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>Many new values decoded.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Tables for weapons and status line.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>More general remarks.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>0.0.5, 16 July, 1996</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>Many new values decoded.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Variables entry in the message description.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Life-cycles.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.0, 28 July, 1996</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>QuakeC source is published. Many things get their right names now.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Life-cycles for multi player.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>This version is the first reliable one.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.1, 29 July, 1996</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>Almost all identifier names match now the QuakeC names.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Grammar check by SW.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.2, 30 July, 1996</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>Serious semantic mistake corrected (spawn/update).</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Some minor layout improvements.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.3, 17 November, 1996</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>I (finally) checked registered Quake: nothing special.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>effects and punchangle&lowbar;x get their proper names.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.4, 8 February, 1997</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>Info on Quake font included.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>CD track header format finally corrected.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Info on dproxy and FAQ-Proxy included.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.5, 28 July, 1997</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>Info on 1.06/1.07 problem included.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Source is SGML-Tools 0.99.10 based.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.6, 12 March, 1998</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>SGML-Tools 1.0.5 used.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>First few Hexen II infos.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>New home is PlanetQuake.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>CD track section rewritten.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Thanks to Stefan Schwoon 
(<ULINK URL="mailto:ssch0098@rz.uni-hildesheim.de">ssch0098@rz.uni-hildesheim.de</ULINK>) for his hints on some 1.07 and 1.08
changes.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.6, 12 March, 1998</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>CD track section again beautyfied.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.7, 15 July, 1998</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA><EMPHASIS REMAP="bf">stopsound</EMPHASIS> is OK now.</PARA>
</LISTITEM>
<LISTITEM>
<PARA>SGML-Tools 1.0.7 used.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.8, 6 September, 1998</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>All Hexen II infos removed. It was never totally correct and I was
never really interested in making it right.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>1.0.9, 8 January, 1999</TERM>
<LISTITEM>
<PARA>

<ITEMIZEDLIST>
<LISTITEM>
<PARA>typo corrected.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST></PARA>
</SECT1>
</ARTICLE>
