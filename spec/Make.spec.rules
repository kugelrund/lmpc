# $Id$

# demo file specifications
# Copyright (C) 1996-99,2004 Uwe Girlich
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# Uwe Girlich (uwe@planetquake.com)

#****************************************************************************#
# Make.spec.rules - generic (auto) make rules for all specifications         #
#****************************************************************************#


CURL=/usr/bin/curl
DOCBOOK2HTML=/usr/bin/docbook2html
DOCBOOK2PDF=/usr/bin/docbook2pdf
SGMLNORM=/usr/bin/sgmlnorm
JADE=/usr/bin/jade
RM_F=/bin/rm -f
XSLTPROC=/usr/bin/xsltproc
SITECOPY=/usr/bin/sitecopy
XSLTDIR=/usr/share/xml/docbook/stylesheet/nwalsh/current
WPU=@WPU@
POSTPROCESS=$(PERL) $(top_srcdir)/spec/postprocess.pl
SPEC_DSL=$(top_srcdir)/spec/spec.dsl

all: $(DEFAULT_TARGET_$(TYPE))

DEFAULT_TARGET_document=doc index.html

nothing:

doc: html pdf

# This rule converts (once) the old LinuxDoc input file into a generic
# (SGML) DocBook file.
# The conversion goes as follows:
# - Stylesheet: from LinuxDoc to DocBook 3.0
# - Perl script: from DocBook 3.0 to DocBook 4.2
# - SGMLNorm: normalize the SGML file.
# - Perl script: add some unknown entities, improve email and author name.
$(PACKAGE).gen.in: $(PACKAGE).base
	$(POSTPROCESS) 0 < $< > temp0
	$(JADE) \
		-t sgml \
		-c /usr/share/sgml/openjade/catalog \
		-c /usr/lib/sgml-tools/dtd/catalog \
		-d "/usr/share/sgml/docbook/dsssl-stylesheets/ld2db.dsl#db" \
		temp0 > temp1
	$(POSTPROCESS) 1 < temp1 > temp2
	$(SGMLNORM) temp2 >> temp3
	$(POSTPROCESS) 2 < temp3 > $@

$(PACKAGE).sgml.in: $(PACKAGE).gen.in
	echo '<!DOCTYPE ARTICLE PUBLIC "-//OASIS//DTD DocBook V4.2//EN" [' > $@
	cat $< >> $@

$(PACKAGE).xml.in: $(PACKAGE).gen.in
	echo '<?xml version="1.0" encoding="UTF-8"?>' > $@
	echo '<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"' >> $@
	echo '"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [' >> $@
	cat $< | $(POSTPROCESS) 3 >> $@

$(PACKAGE).sgml: $(PACKAGE).sgml.in
	$(WPU) --set ACTION=subst $< $@

$(PACKAGE).xml: $(PACKAGE).xml.in
	$(WPU) --set ACTION=subst $< $@

$(PACKAGE)xml.html: $(PACKAGE).xml
	$(XSLTPROC) --output $(PACKAGE)xml.html $(XSLTDIR)/html/docbook.xsl $<

$(PACKAGE)xml.pdf: $(PACKAGE).xml
	$(XSLTPROC) --output $(PACKAGE)xml.pdf $(XSLTDIR)/fo/docbook.xsl $<

html: $(PACKAGE).html

pdf: $(PACKAGE).pdf

$(PACKAGE).html: $(PACKAGE).sgml $(SPEC_DSL)
	$(DOCBOOK2HTML) -d "$(SPEC_DSL)#html" --nochunks $<

$(PACKAGE).pdf: $(PACKAGE).sgml $(SPEC_DSL)
	$(DOCBOOK2PDF) -d "$(SPEC_DSL)#print" $<

index: index.html indexpart.html

# I hate it. This construct makes it possible to have
# MAKE conditionals in Automake files.
@EMPTY@ifneq ($(TYPE),main)

@EMPTY@ifeq ($(TYPE),program)

index.html: $(PACKAGE).sgml $(WPU)
	$(WPU) --set ACTION=packageindex \
		--set TYPE=$(TYPE) \
		$< $@

@EMPTY@else

index.html: $(PACKAGE).sgml $(WPU)
	$(WPU) --set ACTION=packageindex \
		--set TYPE=$(TYPE) \
		--set DOWNCOUNT=0 \
		$< $@

@EMPTY@endif

@EMPTY@endif

indexpart.html: $(PACKAGE).sgml $(WPU)
	$(WPU) --set ACTION=indexpart \
		--set TYPE=$(TYPE) \
		$< $@

UPLOAD_FILES_document=index.html $(PACKAGE).html $(PACKAGE).sgml $(PACKAGE).pdf
UPLOAD_DIR_document=$(PACKAGE)

UPLOAD_FILES=$(UPLOAD_FILES_$(TYPE))
UPLOAD_DIR=$(UPLOAD_DIR_$(TYPE))

uploadlocal:
	if [ ! -z $(UPLOAD_DIR) ]; then \
		echo copy the files $(UPLOAD_FILES) ; \
		echo into $(UPLOAD_DIR) ; \
		$(WPU) --set ACTION=execsubst -- \
			mkdir -p @PQSTAGE@/$(UPLOAD_DIR) ; \
		for f in $(UPLOAD_FILES) ; do \
			if $(WPU) --set ACTION=execsubst -- \
				cmp -s $$f @PQSTAGE@/$(UPLOAD_DIR)/$$f ; then \
				echo $$f did not change. ; \
			else \
				$(WPU) --set ACTION=execsubst -- \
					cp -a $$f @PQSTAGE@/$(UPLOAD_DIR) ; \
			fi ; \
		done ; \
	fi


CLEANFILES=temp0 temp1 temp2 temp3 index.html indexpart.html \
	$(PACKAGE).sgml.in $(PACKAGE).xml.in $(PACKAGE).sgml $(PACKAGE).xml \
	$(PACKAGE).html $(PACKAGE).pdf $(PACKAGE)xml.html $(PACKAGE)xml.pdf \
	*.tex *.aux *.log *.out

